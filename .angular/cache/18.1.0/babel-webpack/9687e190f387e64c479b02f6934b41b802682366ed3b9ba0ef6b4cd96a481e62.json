{"ast":null,"code":"import { UntypedFormControl, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\nimport { AsyncPipe } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { NgxMaskDirective, provideNgxMask } from 'ngx-mask';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { BreadcrumbComponent } from '@shared/components/breadcrumb/breadcrumb.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/form-field\";\nimport * as i2 from \"@angular/material/icon\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/autocomplete\";\nimport * as i6 from \"@angular/material/core\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/material/button\";\nconst _c0 = () => [\"Home\", \"Forms\"];\nfunction AdvanceControlsComponent_For_122_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", option_r2.name, \" \");\n  }\n}\nfunction AdvanceControlsComponent_Conditional_172_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r2.getErrorMessage());\n  }\n}\nexport class AdvanceControlsComponent {\n  constructor() {\n    this.hide = true;\n    this.myControl = new UntypedFormControl();\n    this.options = [{\n      name: 'Mary'\n    }, {\n      name: 'Shelley'\n    }, {\n      name: 'Igor'\n    }];\n    this.email = new UntypedFormControl('', [Validators.required, Validators.email]);\n    //constructor\n  }\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges.pipe(startWith(''), map(value => typeof value === 'string' ? value : value.name), map(name => name ? this._filter(name) : this.options.slice()));\n  }\n  displayFn(user) {\n    return user && user.name ? user.name : '';\n  }\n  _filter(name) {\n    const filterValue = name.toLowerCase();\n    return this.options.filter(option => option.name.toLowerCase().indexOf(filterValue) === 0);\n  }\n  getErrorMessage() {\n    return this.email.hasError('required') ? 'You must enter a value' : this.email.hasError('email') ? 'Not a valid email' : '';\n  }\n  static #_ = this.ɵfac = function AdvanceControlsComponent_Factory(t) {\n    return new (t || AdvanceControlsComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdvanceControlsComponent,\n    selectors: [[\"app-advance-controls\"]],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([provideNgxMask()]), i0.ɵɵStandaloneFeature],\n    decls: 198,\n    vars: 20,\n    consts: [[\"auto\", \"matAutocomplete\"], [\"input\", \"\"], [1, \"content\"], [1, \"content-block\"], [1, \"block-header\"], [3, \"title\", \"items\", \"active_item\"], [1, \"row\"], [1, \"col-xl-12\", \"col-lg-12\", \"col-md-12\", \"col-sm-12\"], [1, \"card\"], [1, \"header\"], [1, \"body\"], [1, \"col-4\"], [\"appearance\", \"fill\", 1, \"example-full-width\"], [\"matPrefix\", \"\"], [1, \"m-2\"], [\"matInput\", \"\", \"placeholder\", \"EX: 10/07/2020\", \"mask\", \"00/00/0000\"], [\"matInput\", \"\", \"placeholder\", \"EX: 10/07/20 11:05:29 \", \"mask\", \"00/00/00 00:00:00\"], [\"matInput\", \"\", \"placeholder\", \"EX: 23:05:29 \", \"mask\", \"Hh:m0:s0\"], [1, \"row\", \"mt-3\"], [\"matInput\", \"\", \"placeholder\", \"EX: (435) 345 34 54\", \"prefix\", \"+91 \", \"mask\", \"(000) 000 00 00\"], [\"matInput\", \"\", \"placeholder\", \"EX: 6762 \", \"suffix\", \" $\", \"mask\", \"0000\"], [\"matInput\", \"\", \"placeholder\", \"EX: 565-656.55\", \"mask\", \"000-000.00\", 3, \"dropSpecialCharacters\"], [\"matInput\", \"\", \"placeholder\", \"EX: (435) 345 34 54\", \"mask\", \"(000) 000-0000\", 3, \"showMaskTyped\"], [\"matInput\", \"\", \"placeholder\", \"EX: 125 897 854 \", \"mask\", \"separator\"], [\"matInput\", \"\", \"placeholder\", \"EX: 125.878.754\", \"mask\", \"separator\", \"thousandSeparator\", \".\"], [\"matInput\", \"\", \"placeholder\", \"EX: ***/*4/4354\", \"mask\", \"XXX/X0/0000\", 3, \"hiddenInput\"], [\"matInput\", \"\", \"placeholder\", \"EX: 443.543.534.535\", \"mask\", \"IP\", 3, \"showMaskTyped\"], [1, \"col-6\"], [1, \"example-form\"], [1, \"example-full-width\"], [\"type\", \"text\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [3, \"displayWith\"], [3, \"value\"], [\"hintLabel\", \"Max 10 characters\", \"appearance\", \"fill\", 1, \"example-full-width\"], [\"matInput\", \"\", \"maxlength\", \"10\", \"placeholder\", \"Ex. Nougat\"], [\"align\", \"end\"], [\"value\", \"option1\"], [\"value\", \"option2\"], [\"value\", \"option3\"], [\"matInput\", \"\", \"placeholder\", \"pat@example.com\", \"required\", \"\", 3, \"formControl\"], [\"matInput\", \"\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [\"matInput\", \"\", \"type\", \"number\", 1, \"example-right-align\"], [\"matSuffix\", \"\"]],\n    template: function AdvanceControlsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"section\", 2)(1, \"div\", 3)(2, \"div\", 4);\n        i0.ɵɵelement(3, \"app-breadcrumb\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 6)(5, \"div\", 7)(6, \"div\", 8)(7, \"div\", 9)(8, \"h2\");\n        i0.ɵɵtext(9, \"Input mask \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 10)(11, \"div\", 6)(12, \"div\", 11)(13, \"mat-form-field\", 12)(14, \"mat-label\");\n        i0.ɵɵtext(15, \"Date Format\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"span\", 13)(17, \"mat-icon\", 14);\n        i0.ɵɵtext(18, \"date_range\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(19, \"input\", 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 11)(21, \"mat-form-field\", 12)(22, \"mat-label\");\n        i0.ɵɵtext(23, \"Date and hour\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"span\", 13)(25, \"mat-icon\", 14);\n        i0.ɵɵtext(26, \"date_range\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(27, \"input\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 11)(29, \"mat-form-field\", 12)(30, \"mat-label\");\n        i0.ɵɵtext(31, \"Valid 24 hour format\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"span\", 13)(33, \"mat-icon\", 14);\n        i0.ɵɵtext(34, \"access_time\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(35, \"input\", 17);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(36, \"div\", 18)(37, \"div\", 11)(38, \"mat-form-field\", 12)(39, \"mat-label\");\n        i0.ɵɵtext(40, \"Prefix\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"span\", 13)(42, \"mat-icon\", 14);\n        i0.ɵɵtext(43, \"phone\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(44, \"input\", 19);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(45, \"div\", 11)(46, \"mat-form-field\", 12)(47, \"mat-label\");\n        i0.ɵɵtext(48, \"Suffix\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"span\", 13)(50, \"mat-icon\", 14);\n        i0.ɵɵtext(51, \"attach_money\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(52, \"input\", 20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(53, \"div\", 11)(54, \"mat-form-field\", 12)(55, \"mat-label\");\n        i0.ɵɵtext(56, \"Drop Special Character\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(57, \"span\", 13)(58, \"mat-icon\", 14);\n        i0.ɵɵtext(59, \"error_outline\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(60, \"input\", 21);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(61, \"div\", 18)(62, \"div\", 11)(63, \"mat-form-field\", 12)(64, \"mat-label\");\n        i0.ɵɵtext(65, \"Show Mask Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(66, \"span\", 13)(67, \"mat-icon\", 14);\n        i0.ɵɵtext(68, \"phone\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(69, \"input\", 22);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(70, \"div\", 11)(71, \"mat-form-field\", 12)(72, \"mat-label\");\n        i0.ɵɵtext(73, \"Thousand separator\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(74, \"span\", 13)(75, \"mat-icon\", 14);\n        i0.ɵɵtext(76, \"attach_money\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(77, \"input\", 23);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(78, \"div\", 11)(79, \"mat-form-field\", 12)(80, \"mat-label\");\n        i0.ɵɵtext(81, \"Dot separator\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(82, \"span\", 13)(83, \"mat-icon\", 14);\n        i0.ɵɵtext(84, \"create\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(85, \"input\", 24);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(86, \"div\", 18)(87, \"div\", 11)(88, \"mat-form-field\", 12)(89, \"mat-label\");\n        i0.ɵɵtext(90, \"Secure input\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(91, \"span\", 13)(92, \"mat-icon\", 14);\n        i0.ɵɵtext(93, \"credit_card\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(94, \"input\", 25);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(95, \"div\", 11)(96, \"mat-form-field\", 12)(97, \"mat-label\");\n        i0.ɵɵtext(98, \"IP Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(99, \"span\", 13)(100, \"mat-icon\", 14);\n        i0.ɵɵtext(101, \"desktop_mac\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(102, \"input\", 26);\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelementStart(103, \"div\", 6)(104, \"div\", 7)(105, \"div\", 8)(106, \"div\", 9)(107, \"h2\");\n        i0.ɵɵtext(108, \"Autocomplete\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(109, \"div\", 10)(110, \"div\", 6)(111, \"div\", 27)(112, \"h6\");\n        i0.ɵɵtext(113, \"Display value autocomplete\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(114, \"form\", 28)(115, \"mat-form-field\", 29)(116, \"mat-label\");\n        i0.ɵɵtext(117, \"Assignee\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(118, \"input\", 30);\n        i0.ɵɵelementStart(119, \"mat-autocomplete\", 31, 0);\n        i0.ɵɵrepeaterCreate(121, AdvanceControlsComponent_For_122_Template, 2, 2, \"mat-option\", 32, i0.ɵɵrepeaterTrackByIdentity);\n        i0.ɵɵpipe(123, \"async\");\n        i0.ɵɵelementEnd()()()()()()()()();\n        i0.ɵɵelementStart(124, \"div\", 6)(125, \"div\", 7)(126, \"div\", 8)(127, \"div\", 9)(128, \"h2\");\n        i0.ɵɵtext(129, \"Hint Label\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(130, \"div\", 10)(131, \"div\", 6)(132, \"div\", 27)(133, \"h6\");\n        i0.ɵɵtext(134, \"Form field with hints\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(135, \"mat-form-field\", 33)(136, \"mat-label\");\n        i0.ɵɵtext(137, \"Enter some input\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(138, \"input\", 34, 1);\n        i0.ɵɵelementStart(140, \"mat-hint\", 35);\n        i0.ɵɵtext(141);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(142, \"div\", 27)(143, \"h6\");\n        i0.ɵɵtext(144, \"Form field with hints\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(145, \"mat-form-field\", 12)(146, \"mat-label\");\n        i0.ɵɵtext(147, \"Select me\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(148, \"mat-select\")(149, \"mat-option\", 36);\n        i0.ɵɵtext(150, \"Option 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(151, \"mat-option\", 37);\n        i0.ɵɵtext(152, \"Option 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(153, \"mat-option\", 38);\n        i0.ɵɵtext(154, \"Option 3\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(155, \"mat-hint\", 35);\n        i0.ɵɵtext(156, \"Here's the dropdown arrow ^\");\n        i0.ɵɵelementEnd()()()()()()()();\n        i0.ɵɵelementStart(157, \"div\", 6)(158, \"div\", 7)(159, \"div\", 8)(160, \"div\", 9)(161, \"h2\");\n        i0.ɵɵtext(162, \"Error Message\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(163, \"div\", 10)(164, \"div\", 6)(165, \"div\", 27)(166, \"h6\");\n        i0.ɵɵtext(167, \"Form field with error messages\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(168, \"mat-form-field\", 12)(169, \"mat-label\");\n        i0.ɵɵtext(170, \"Enter your email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(171, \"input\", 39);\n        i0.ɵɵtemplate(172, AdvanceControlsComponent_Conditional_172_Template, 2, 1, \"mat-error\");\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelementStart(173, \"div\", 6)(174, \"div\", 7)(175, \"div\", 8)(176, \"div\", 9)(177, \"h2\");\n        i0.ɵɵtext(178, \"Prefix & suffix\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(179, \"div\", 10)(180, \"div\", 6)(181, \"div\", 27)(182, \"mat-form-field\", 12)(183, \"mat-label\");\n        i0.ɵɵtext(184, \"Enter your password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(185, \"input\", 40);\n        i0.ɵɵelementStart(186, \"button\", 41);\n        i0.ɵɵlistener(\"click\", function AdvanceControlsComponent_Template_button_click_186_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.hide = !ctx.hide);\n        });\n        i0.ɵɵelementStart(187, \"mat-icon\");\n        i0.ɵɵtext(188);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(189, \"div\", 27)(190, \"mat-form-field\", 12)(191, \"mat-label\");\n        i0.ɵɵtext(192, \"Amount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(193, \"input\", 42);\n        i0.ɵɵelementStart(194, \"span\", 13);\n        i0.ɵɵtext(195, \"$\\u00A0\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(196, \"span\", 43);\n        i0.ɵɵtext(197, \".00\");\n        i0.ɵɵelementEnd()()()()()()()()()();\n      }\n      if (rf & 2) {\n        const auto_r4 = i0.ɵɵreference(120);\n        const input_r5 = i0.ɵɵreference(139);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"title\", \"Advance Controls\")(\"items\", i0.ɵɵpureFunction0(19, _c0))(\"active_item\", \"Advance Controls\");\n        i0.ɵɵadvance(57);\n        i0.ɵɵproperty(\"dropSpecialCharacters\", false);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"showMaskTyped\", true);\n        i0.ɵɵadvance(25);\n        i0.ɵɵproperty(\"hiddenInput\", true);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"showMaskTyped\", true);\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"formControl\", ctx.myControl)(\"matAutocomplete\", auto_r4);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"displayWith\", ctx.displayFn);\n        i0.ɵɵadvance(2);\n        i0.ɵɵrepeater(i0.ɵɵpipeBind1(123, 17, ctx.filteredOptions));\n        i0.ɵɵadvance(20);\n        i0.ɵɵtextInterpolate1(\"\", input_r5.value.length || 0, \"/10\");\n        i0.ɵɵadvance(30);\n        i0.ɵɵproperty(\"formControl\", ctx.email);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.email.invalid ? 172 : -1);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\");\n        i0.ɵɵadvance();\n        i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-pressed\", ctx.hide);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.hide ? \"visibility_off\" : \"visibility\");\n      }\n    },\n    dependencies: [BreadcrumbComponent, MatFormFieldModule, i1.MatFormField, i1.MatLabel, i1.MatHint, i1.MatError, i1.MatPrefix, i1.MatSuffix, MatIconModule, i2.MatIcon, MatInputModule, i3.MatInput, NgxMaskDirective, FormsModule, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgForm, MatAutocompleteModule, i5.MatAutocomplete, i6.MatOption, i5.MatAutocompleteTrigger, ReactiveFormsModule, i4.FormControlDirective, MatOptionModule, MatSelectModule, i7.MatSelect, MatButtonModule, i8.MatIconButton, AsyncPipe]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}