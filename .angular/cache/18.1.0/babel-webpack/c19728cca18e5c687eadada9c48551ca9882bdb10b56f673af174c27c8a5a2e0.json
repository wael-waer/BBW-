{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { UnsubscribeOnDestroyAdapter } from '@shared';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AttendancesService extends UnsubscribeOnDestroyAdapter {\n  constructor(httpClient) {\n    super();\n    this.httpClient = httpClient;\n    this.API_URL = 'assets/data/attendance.json';\n    this.isTblLoading = true;\n    this.dataChange = new BehaviorSubject([]);\n  }\n  get data() {\n    return this.dataChange.value;\n  }\n  getDialogData() {\n    return this.dialogData;\n  }\n  /** CRUD METHODS */\n  getAllAttendancess() {\n    this.subs.sink = this.httpClient.get(this.API_URL).subscribe({\n      next: data => {\n        this.isTblLoading = false;\n        this.dataChange.next(data);\n      },\n      error: error => {\n        this.isTblLoading = false;\n        console.log(error.name + ' ' + error.message);\n      }\n    });\n  }\n  getAttendance() {\n    let id_user = \"65f195dd0f04705fe41b3838\";\n    // return this.httpClient.get(`http://localhost:3000/auth/${id_user}/attendances`);\n    return this.httpClient.get(`http://localhost:6200/auth/${id_user}/attendances`);\n  }\n  addAttendances(attendances) {\n    this.dialogData = attendances;\n    // this.httpClient.post(this.API_URL, attendances)\n    //   .subscribe({\n    //     next: (data) => {\n    //       this.dialogData = attendances;\n    //     },\n    //     error: (error: HttpErrorResponse) => {\n    //        // error code here\n    //     },\n    //   });\n  }\n  updateAttendances(attendances) {\n    this.dialogData = attendances;\n    // this.httpClient.put(this.API_URL + attendances.id, attendances)\n    //     .subscribe({\n    //       next: (data) => {\n    //         this.dialogData = attendances;\n    //       },\n    //       error: (error: HttpErrorResponse) => {\n    //          // error code here\n    //       },\n    //     });\n  }\n  deleteAttendances(id) {\n    console.log(id);\n    // this.httpClient.delete(this.API_URL + id)\n    //     .subscribe({\n    //       next: (data) => {\n    //         console.log(id);\n    //       },\n    //       error: (error: HttpErrorResponse) => {\n    //          // error code here\n    //       },\n    //     });\n  }\n  Pointer(payload) {\n    let personnelId = \"65f195dd0f04705fe41b3838\";\n    return this.httpClient.put(`http://localhost:6100/attendance/${personnelId}/validate-presence`, payload);\n  }\n  static #_ = this.ɵfac = function AttendancesService_Factory(t) {\n    return new (t || AttendancesService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AttendancesService,\n    factory: AttendancesService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}