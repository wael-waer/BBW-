{"ast":null,"code":"import { MAT_DIALOG_DATA, MatDialogContent } from '@angular/material/dialog';\nimport { UntypedFormControl, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Calendar } from '../../calendar.model';\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from '@danielmoncada/angular-datetime-picker';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../../calendar.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/icon\";\nexport class FormDialogComponent {\n  constructor(dialogRef, data, calendarService, fb) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.calendarService = calendarService;\n    this.fb = fb;\n    this.showDeleteBtn = false;\n    this.formControl = new UntypedFormControl('', [Validators.required\n    // Validators.email,\n    ]);\n    // Set the defaults\n    this.action = data.action;\n    if (this.action === 'edit') {\n      this.dialogTitle = data.calendar.title;\n      this.calendar = data.calendar;\n      this.showDeleteBtn = true;\n    } else {\n      this.dialogTitle = 'New Event';\n      const blankObject = {};\n      this.calendar = new Calendar(blankObject);\n      this.showDeleteBtn = false;\n    }\n    this.calendarForm = this.createContactForm();\n  }\n  getErrorMessage() {\n    return this.formControl.hasError('required') ? 'Required field' : this.formControl.hasError('email') ? 'Not a valid email' : '';\n  }\n  createContactForm() {\n    return this.fb.group({\n      id: [this.calendar.id],\n      title: [this.calendar.title, [Validators.required]],\n      category: [this.calendar.category],\n      startDate: [this.calendar.startDate, [Validators.required]],\n      endDate: [this.calendar.endDate, [Validators.required]],\n      details: [this.calendar.details]\n    });\n  }\n  submit() {\n    // emppty stuff\n  }\n  deleteEvent() {\n    this.calendarService.deleteCalendar(this.calendarForm.getRawValue());\n    this.dialogRef.close('delete');\n  }\n  onNoClick() {\n    this.dialogRef.close();\n  }\n  confirmAdd() {\n    this.calendarService.addUpdateCalendar(this.calendarForm.getRawValue());\n    this.dialogRef.close('submit');\n  }\n  onSubmit() {\n    // Traitement des données du formulaire\n    // Vous pouvez les enregistrer où vous le souhaitez\n    this.dialogRef.close();\n  }\n  static #_ = this.ɵfac = function FormDialogComponent_Factory(t) {\n    return new (t || FormDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.CalendarService), i0.ɵɵdirectiveInject(i3.UntypedFormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormDialogComponent,\n    selectors: [[\"app-form-dialog\", 5, \"l\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 34,\n    vars: 3,\n    consts: [[1, \"addContainer\"], [1, \"modalHeader\"], [1, \"editRowModal\"], [1, \"modalHeader\", \"clearfix\"], [1, \"modal-about\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Close dialog\", 1, \"modal-close-button\", 3, \"click\"], [\"mat-dialog-content\", \"\"], [1, \"form-dialog\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"etat\"], [\"id\", \"etat\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"option1\"], [\"value\", \"option2\"], [\"value\", \"option3\"], [\"for\", \"status\"], [\"id\", \"status\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function FormDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function FormDialogComponent_Template_button_click_6_listener() {\n          return ctx.dialogRef.close();\n        });\n        i0.ɵɵelementStart(7, \"mat-icon\");\n        i0.ɵɵtext(8, \"close\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"div\", 6)(10, \"div\", 7)(11, \"form\", 8);\n        i0.ɵɵlistener(\"ngSubmit\", function FormDialogComponent_Template_form_ngSubmit_11_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(12, \"div\", 9)(13, \"label\", 10);\n        i0.ɵɵtext(14, \"\\u00C9tat :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"select\", 11);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function FormDialogComponent_Template_select_ngModelChange_15_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.etat, $event) || (ctx.etat = $event);\n          return $event;\n        });\n        i0.ɵɵelementStart(16, \"option\", 12);\n        i0.ɵɵtext(17, \"Option 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"option\", 13);\n        i0.ɵɵtext(19, \"Option 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"option\", 14);\n        i0.ɵɵtext(21, \"Option 3\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(22, \"div\", 9)(23, \"label\", 15);\n        i0.ɵɵtext(24, \"Status :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"select\", 16);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function FormDialogComponent_Template_select_ngModelChange_25_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.status, $event) || (ctx.status = $event);\n          return $event;\n        });\n        i0.ɵɵelementStart(26, \"option\", 12);\n        i0.ɵɵtext(27, \"Option 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"option\", 13);\n        i0.ɵɵtext(29, \"Option 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"option\", 14);\n        i0.ɵɵtext(31, \"Option 3\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(32, \"button\", 17);\n        i0.ɵɵtext(33, \"Submit\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" \", ctx.dialogTitle, \" \");\n        i0.ɵɵadvance(10);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.etat);\n        i0.ɵɵadvance(10);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.status);\n      }\n    },\n    dependencies: [MatButtonModule, i4.MatIconButton, MatIconModule, i5.MatIcon, MatDialogContent, FormsModule, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, ReactiveFormsModule, MatFormFieldModule, MatInputModule, MatSelectModule, MatOptionModule, OwlDateTimeModule, OwlNativeDateTimeModule]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}