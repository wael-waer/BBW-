{"ast":null,"code":"import { MAT_DIALOG_DATA, MatDialogContent } from '@angular/material/dialog';\nimport { UntypedFormControl, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { JobsList } from '../../jobs-list.model';\nimport { CommonModule, formatDate } from '@angular/common';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { SharedModule } from 'shared.module';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../../jobs-list.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/select\";\nimport * as i9 from \"@angular/material/core\";\nimport * as i10 from \"@angular/material/datepicker\";\nimport * as i11 from \"@angular/common\";\nfunction FormDialogComponent_mat_error_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Job Title is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormDialogComponent_mat_error_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Description is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormDialogComponent_mat_error_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Location is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormDialogComponent_mat_error_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Contract Type is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormDialogComponent_mat_error_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Salary is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormDialogComponent_mat_error_63_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Application Deadline is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormDialogComponent_mat_error_76_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Status is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormDialogComponent_mat_error_87_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Skills are required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class FormDialogComponent {\n  constructor(dialogRef, data, jobsListService, fb) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.jobsListService = jobsListService;\n    this.fb = fb;\n    // predefinedSkills: string[] = ['HTML', 'CSS', 'JavaScript', 'Angular', 'React', 'Node.js','Java',\n    // 'Python',\n    // 'JavaScript',\n    // 'C#',\n    // 'C++',\n    // 'Ruby',\n    // 'Swift',\n    // 'Kotlin'];\n    this.predefinedSkills = [];\n    this.skills = [];\n    this.separatorKeysCodes = [ENTER, COMMA];\n    this.enteredSkills = [];\n    this.formControl = new UntypedFormControl('', [Validators.required\n    // Validators.status,\n    ]);\n    // this.sortPredefinedSkills();\n    // Set the defaults\n    this.action = data.action;\n    if (this.action === 'edit') {\n      this.dialogTitle = data.jobsList.title;\n      this.jobsList = data.jobsList;\n    } else if (this.action === 'add') {\n      // this.dialogTitle = 'New JobsList';\n      // const blankObject = {} as JobsList;\n      // this.jobsList = new JobsList(blankObject);\n      // this.jobsList = Object.assign(new JobsList(), blankObject);\n      this.dialogTitle = 'New JobsList';\n      this.jobsList = new JobsList();\n    }\n    this.jobsListForm = this.createContactForm();\n  }\n  ngOnInit() {\n    this.jobsListForm = this.fb.group({\n      // title: ['', Validators.required],\n      // description: ['', Validators.required],\n      // location: ['', Validators.required],\n      // contractType: ['', Validators.required],\n      // salary: ['', Validators.required],\n      // applicationDeadline: ['', Validators.required],\n      // status: ['', Validators.required],\n      // publicationDate: ['', Validators.required],\n      // requiredSkills: [[], Validators.required], // Définissez un tableau vide pour les compétences requises\n      // recruitingManager: ['', Validators.required]\n      id: [this.jobsList._id],\n      // Assurez-vous que l'ID est initialisé correctement\n      title: [this.jobsList.title, Validators.required],\n      description: [this.jobsList.description, Validators.required],\n      location: [this.jobsList.location, Validators.required],\n      contractType: [this.jobsList.contractType, Validators.required],\n      salary: [this.jobsList.salary, Validators.required],\n      applicationDeadline: [this.jobsList.applicationDeadline, Validators.required],\n      status: [this.jobsList.status, Validators.required],\n      requiredSkills: [this.jobsList.requiredSkills, Validators.required]\n    });\n  }\n  getErrorMessage() {\n    return this.formControl.hasError('required') ? 'Required field' : this.formControl.hasError('status') ? 'Not a valid status' : '';\n  }\n  onSkillInput(event) {\n    const value = event?.target?.value;\n    // Vérifier si value est défini et non vide avant de l'ajouter\n    if (value && value.trim() !== '' && !this.enteredSkills.includes(value)) {\n      this.enteredSkills.push(value.trim());\n    }\n  }\n  // sortPredefinedSkills() {\n  //   this.predefinedSkills.sort((a, b) => a.localeCompare(b));\n  // }\n  removeSkill(skill) {\n    // Supprimer une compétence du tableau enteredSkills lorsque l'utilisateur retire un tag\n    const index = this.enteredSkills.indexOf(skill);\n    if (index >= 0) {\n      this.enteredSkills.splice(index, 1);\n    }\n  }\n  createContactForm() {\n    return this.fb.group({\n      id: [this.jobsList._id],\n      Title: [this.jobsList.title],\n      requiredSkills: [this.jobsList.requiredSkills],\n      applicationDeadline: [this.jobsList.applicationDeadline ? formatDate(this.jobsList.applicationDeadline, 'yyyy-MM-dd', 'en') : null, [Validators.required]],\n      Location: [this.jobsList.location],\n      contractType: [this.jobsList.contractType],\n      salary: [this.jobsList.salary]\n    });\n  }\n  submit() {\n    // emppty stuff\n  }\n  onNoClick() {\n    this.dialogRef.close();\n  }\n  confirmAdd() {\n    if (this.jobsListForm.valid) {\n      const formData = this.jobsListForm.value;\n      if (this.action === 'add') {\n        // Logique pour ajouter un nouveau job\n        const newJobsList = {\n          _id: formData.id,\n          title: formData.title,\n          description: formData.description,\n          requiredSkills: formData.requiredSkills,\n          location: formData.location,\n          contractType: formData.contractType,\n          salary: formData.salary,\n          applicationDeadline: formData.applicationDeadline,\n          status: formData.status,\n          applicants: formData.applicants\n        };\n        // Appelez la méthode de service pour ajouter le nouveau job\n        this.jobsListService.addJob(newJobsList).subscribe(response => {\n          console.log('New job added successfully:', response);\n          alert('Job added successfully!');\n          this.dialogRef.close(); // Fermez le dialogue après l'ajout réussi\n        }, error => {\n          console.error('Error adding new job:', error);\n        });\n      } else if (this.action === 'edit') {\n        // Logique pour modifier un job existant\n        const updatedJobsList = {\n          _id: formData.id,\n          title: formData.title,\n          description: formData.description,\n          requiredSkills: formData.requiredSkills,\n          location: formData.location,\n          contractType: formData.contractType,\n          salary: formData.salary,\n          applicationDeadline: formData.applicationDeadline,\n          status: formData.status,\n          applicants: formData.applicants\n        };\n        // Appelez la méthode de service pour mettre à jour le job existant\n        this.jobsListService.updateJob(updatedJobsList).subscribe(response => {\n          console.log('Job updated successfully:', response);\n          alert('Job updated successfully!');\n          this.dialogRef.close(); // Fermez le dialogue après la modification réussie\n          // this.JobsListComponent.refresh(); \n        }, error => {\n          console.error('Error updating job:', error);\n        });\n      }\n    } else {\n      console.error('Invalid form data. Please check the form.');\n    }\n  }\n  static #_ = this.ɵfac = function FormDialogComponent_Factory(t) {\n    return new (t || FormDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.JobsListService), i0.ɵɵdirectiveInject(i3.UntypedFormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormDialogComponent,\n    selectors: [[\"app-form-dialog\", 5, \"f\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 93,\n    vars: 16,\n    consts: [[\"picker\", \"\"], [1, \"addContainer\"], [1, \"modalHeader\"], [1, \"editRowModal\"], [1, \"modalHeader\", \"clearfix\"], [1, \"modal-about\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Close dialog\", 1, \"modal-close-button\", 3, \"click\"], [\"mat-dialog-content\", \"\"], [1, \"register-form\", \"m-4\", 3, \"ngSubmit\", \"formGroup\"], [1, \"row\"], [1, \"col-xl-12\", \"col-lg-12\", \"col-md-12\", \"col-sm-12\", \"mb-2\"], [\"appearance\", \"outline\", 1, \"example-full-width\"], [\"matInput\", \"\", \"formControlName\", \"title\", \"required\", \"\"], [\"matSuffix\", \"\", 1, \"material-icons-outlined\", \"color-icon\", \"p-3\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"description\", \"required\", \"\"], [1, \"col-xl-6\", \"col-lg-6\", \"col-md-12\", \"col-sm-12\", \"mb-2\"], [\"matInput\", \"\", \"formControlName\", \"location\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"contractType\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"salary\", \"type\", \"number\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"applicationDeadline\", \"required\", \"\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"formControlName\", \"status\", \"required\", \"\"], [3, \"value\"], [\"matInput\", \"\", \"formControlName\", \"requiredSkills\", \"required\", \"\"], [\"align\", \"end\", 1, \"example-button-row\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"]],\n    template: function FormDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4)(4, \"div\", 5);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function FormDialogComponent_Template_button_click_6_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.dialogRef.close());\n        });\n        i0.ɵɵelementStart(7, \"mat-icon\");\n        i0.ɵɵtext(8, \"close\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"form\", 8);\n        i0.ɵɵlistener(\"ngSubmit\", function FormDialogComponent_Template_form_ngSubmit_10_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.confirmAdd());\n        });\n        i0.ɵɵelementStart(11, \"div\", 9)(12, \"div\", 10)(13, \"mat-form-field\", 11)(14, \"mat-label\");\n        i0.ɵɵtext(15, \"Job Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 12);\n        i0.ɵɵelementStart(17, \"mat-icon\", 13);\n        i0.ɵɵtext(18, \"description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, FormDialogComponent_mat_error_19_Template, 2, 0, \"mat-error\", 14);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"div\", 9)(21, \"div\", 10)(22, \"mat-form-field\", 11)(23, \"mat-label\");\n        i0.ɵɵtext(24, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"textarea\", 15);\n        i0.ɵɵelementStart(26, \"mat-icon\", 13);\n        i0.ɵɵtext(27, \"description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(28, FormDialogComponent_mat_error_28_Template, 2, 0, \"mat-error\", 14);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(29, \"div\", 9)(30, \"div\", 16)(31, \"mat-form-field\", 11)(32, \"mat-label\");\n        i0.ɵɵtext(33, \"Location\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(34, \"input\", 17);\n        i0.ɵɵelementStart(35, \"mat-icon\", 13);\n        i0.ɵɵtext(36, \"location_on\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(37, FormDialogComponent_mat_error_37_Template, 2, 0, \"mat-error\", 14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(38, \"div\", 16)(39, \"mat-form-field\", 11)(40, \"mat-label\");\n        i0.ɵɵtext(41, \"Contract Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(42, \"input\", 18);\n        i0.ɵɵelementStart(43, \"mat-icon\", 13);\n        i0.ɵɵtext(44, \"assignment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(45, FormDialogComponent_mat_error_45_Template, 2, 0, \"mat-error\", 14);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(46, \"div\", 9)(47, \"div\", 16)(48, \"mat-form-field\", 11)(49, \"mat-label\");\n        i0.ɵɵtext(50, \"Salary\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(51, \"input\", 19);\n        i0.ɵɵelementStart(52, \"mat-icon\", 13);\n        i0.ɵɵtext(53, \"attach_money\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(54, FormDialogComponent_mat_error_54_Template, 2, 0, \"mat-error\", 14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(55, \"div\", 16)(56, \"mat-form-field\", 11)(57, \"mat-label\");\n        i0.ɵɵtext(58, \"Application Deadline\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(59, \"input\", 20)(60, \"mat-datepicker-toggle\", 21)(61, \"mat-datepicker\", null, 0);\n        i0.ɵɵtemplate(63, FormDialogComponent_mat_error_63_Template, 2, 0, \"mat-error\", 14);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(64, \"div\", 9)(65, \"div\", 16)(66, \"mat-form-field\", 11)(67, \"mat-label\");\n        i0.ɵɵtext(68, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(69, \"mat-select\", 22)(70, \"mat-option\", 23);\n        i0.ɵɵtext(71, \"Open\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(72, \"mat-option\", 23);\n        i0.ɵɵtext(73, \"Closed\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(74, \"mat-option\", 23);\n        i0.ɵɵtext(75, \"Cancelled\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(76, FormDialogComponent_mat_error_76_Template, 2, 0, \"mat-error\", 14);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(77, \"div\", 9)(78, \"div\", 10)(79, \"div\", 9)(80, \"div\", 10)(81, \"mat-form-field\", 11)(82, \"mat-label\");\n        i0.ɵɵtext(83, \"Required Skills\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(84, \"textarea\", 24);\n        i0.ɵɵelementStart(85, \"mat-icon\", 13);\n        i0.ɵɵtext(86, \"description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(87, FormDialogComponent_mat_error_87_Template, 2, 0, \"mat-error\", 14);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(88, \"div\", 9)(89, \"div\", 10)(90, \"div\", 25)(91, \"button\", 26);\n        i0.ɵɵtext(92, \"Save\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        let tmp_3_0;\n        let tmp_4_0;\n        let tmp_5_0;\n        let tmp_6_0;\n        let tmp_7_0;\n        let tmp_10_0;\n        let tmp_14_0;\n        let tmp_15_0;\n        const picker_r2 = i0.ɵɵreference(62);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" \", ctx.dialogTitle, \" \");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.jobsListForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx.jobsListForm.get(\"title\")) == null ? null : tmp_3_0.hasError(\"required\"));\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx.jobsListForm.get(\"description\")) == null ? null : tmp_4_0.hasError(\"required\"));\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", (tmp_5_0 = ctx.jobsListForm.get(\"location\")) == null ? null : tmp_5_0.hasError(\"required\"));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", (tmp_6_0 = ctx.jobsListForm.get(\"contractType\")) == null ? null : tmp_6_0.hasError(\"required\"));\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", (tmp_7_0 = ctx.jobsListForm.get(\"salary\")) == null ? null : tmp_7_0.hasError(\"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"matDatepicker\", picker_r2);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"for\", picker_r2);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", (tmp_10_0 = ctx.jobsListForm.get(\"applicationDeadline\")) == null ? null : tmp_10_0.hasError(\"required\"));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"value\", \"Open\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Closed\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Cancelled\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", (tmp_14_0 = ctx.jobsListForm.get(\"status\")) == null ? null : tmp_14_0.hasError(\"required\"));\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", (tmp_15_0 = ctx.jobsListForm.get(\"requiredSkills\")) == null ? null : tmp_15_0.hasError(\"required\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", !ctx.jobsListForm.valid);\n      }\n    },\n    dependencies: [MatChipsModule, MatButtonModule, i4.MatButton, i4.MatIconButton, MatIconModule, i5.MatIcon, MatDialogContent, FormsModule, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, ReactiveFormsModule, i3.FormGroupDirective, i3.FormControlName, MatFormFieldModule, i6.MatFormField, i6.MatLabel, i6.MatError, i6.MatSuffix, MatInputModule, i7.MatInput, MatSelectModule, i8.MatSelect, i9.MatOption, MatOptionModule, MatDatepickerModule, i10.MatDatepicker, i10.MatDatepickerInput, i10.MatDatepickerToggle, CommonModule, i11.NgIf, SharedModule],\n    styles: [\"@charset \\\"UTF-8\\\";\\n.tag-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-wrap: wrap;\\n}\\n\\n.tag[_ngcontent-%COMP%] {\\n  background-color: #e0e0e0;\\n  color: #333;\\n  border-radius: 4px;\\n  padding: 4px 8px;\\n  margin: 4px;\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.remove-button[_ngcontent-%COMP%] {\\n  margin-left: 70px; \\n\\n}\\n\\n.remove-icon[_ngcontent-%COMP%] {\\n  margin-left: 4px;\\n  cursor: pointer;\\n}\\n\\n.option-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n}\"]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}