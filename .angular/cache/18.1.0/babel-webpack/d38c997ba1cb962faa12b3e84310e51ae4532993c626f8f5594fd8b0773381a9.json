{"ast":null,"code":"import { MatDialogTitle, MatDialogContent } from '@angular/material/dialog';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/button\";\nexport class DialogformComponent {\n  constructor(fb, dialog) {\n    this.fb = fb;\n    this.dialog = dialog;\n    this.fname = 'John';\n    this.lname = 'Deo';\n  }\n  ngOnInit() {\n    this.addCusForm = this.fb.group({\n      IdProof: null,\n      firstname: [this.fname],\n      lastname: [this.lname],\n      email: [null]\n    });\n  }\n  closeDialog() {\n    this.dialog.closeAll();\n  }\n  onSubmitClick() {\n    console.log('Form Value', this.addCusForm?.value);\n  }\n  static #_ = this.ɵfac = function DialogformComponent_Factory(t) {\n    return new (t || DialogformComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.MatDialog));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DialogformComponent,\n    selectors: [[\"app-dialogform\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 22,\n    vars: 3,\n    consts: [[\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"text-inside\"], [1, \"example-full-width\"], [\"matInput\", \"\", \"placeholder\", \"First Name\", \"formControlName\", \"firstname\", \"required\", \"\", 3, \"value\"], [\"matInput\", \"\", \"placeholder\", \"Last Name\", \"formControlName\", \"lastname\", \"required\", \"\", 3, \"value\"], [\"matInput\", \"\", \"placeholder\", \"Email address\", \"formControlName\", \"email\", \"required\", \"\"], [\"matInput\", \"\", \"placeholder\", \"Address\"], [1, \"btn-sec\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"btn-space\"], [\"type\", \"button\", \"mat-button\", \"\", 3, \"click\"]],\n    template: function DialogformComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\", 0);\n        i0.ɵɵtext(2, \"Add User\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function DialogformComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSubmitClick();\n        });\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"mat-form-field\", 4);\n        i0.ɵɵelement(7, \"input\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 3)(9, \"mat-form-field\", 4);\n        i0.ɵɵelement(10, \"input\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 3)(12, \"mat-form-field\", 4);\n        i0.ɵɵelement(13, \"input\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 3)(15, \"mat-form-field\", 4);\n        i0.ɵɵelement(16, \"textarea\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 9)(18, \"button\", 10);\n        i0.ɵɵtext(19, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function DialogformComponent_Template_button_click_20_listener() {\n          return ctx.closeDialog();\n        });\n        i0.ɵɵtext(21, \"Cancel\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.addCusForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.fname);\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.lname);\n      }\n    },\n    dependencies: [MatDialogTitle, MatDialogContent, FormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, ReactiveFormsModule, i1.FormGroupDirective, i1.FormControlName, MatFormFieldModule, i3.MatFormField, MatInputModule, i4.MatInput, MatButtonModule, i5.MatButton]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}