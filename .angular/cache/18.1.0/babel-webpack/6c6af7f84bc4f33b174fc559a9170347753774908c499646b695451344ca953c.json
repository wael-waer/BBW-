{"ast":null,"code":"import { MAT_DIALOG_DATA, MatDialogContent, MatDialogClose } from '@angular/material/dialog';\nimport { UntypedFormControl, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Tickets } from '../../tickets.model';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../../tickets.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/select\";\nimport * as i9 from \"@angular/material/core\";\nimport * as i10 from \"@angular/material/datepicker\";\nfunction FormDialogComponent_Conditional_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Created By is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormDialogComponent_Conditional_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Subject is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormDialogComponent_Conditional_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Status is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormDialogComponent_Conditional_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Assign To is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormDialogComponent_Conditional_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please select date \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class FormDialogComponent {\n  constructor(dialogRef, data, ticketsService, fb) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.ticketsService = ticketsService;\n    this.fb = fb;\n    this.formControl = new UntypedFormControl('', [Validators.required\n    // Validators.email,\n    ]);\n    // Set the defaults\n    this.action = data.action;\n    if (this.action === 'edit') {\n      this.dialogTitle = data.ticket.ticket_id;\n      this.ticket = data.ticket;\n    } else {\n      this.dialogTitle = 'New Ticket';\n      const blankObject = {};\n      this.ticket = new Tickets(blankObject);\n    }\n    this.ticketForm = this.createContactForm();\n  }\n  getErrorMessage() {\n    return this.formControl.hasError('required') ? 'Required field' : this.formControl.hasError('email') ? 'Not a valid email' : '';\n  }\n  createContactForm() {\n    return this.fb.group({\n      id: [this.ticket.id],\n      ticket_id: [this.ticket.ticket_id],\n      createdBy: [this.ticket.createdBy],\n      subject: [this.ticket.subject],\n      status: [this.ticket.status],\n      assignTo: [this.ticket.assignTo],\n      date: [this.ticket.date],\n      details: [this.ticket.details]\n    });\n  }\n  submit() {\n    // emppty stuff\n  }\n  onNoClick() {\n    this.dialogRef.close();\n  }\n  confirmAdd() {\n    this.ticketsService.addTicket(this.ticketForm.getRawValue());\n  }\n  static #_ = this.ɵfac = function FormDialogComponent_Factory(t) {\n    return new (t || FormDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.TicketsService), i0.ɵɵdirectiveInject(i3.UntypedFormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormDialogComponent,\n    selectors: [[\"app-form-dialog\", 5, \"n\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 70,\n    vars: 13,\n    consts: [[\"picker\", \"\"], [1, \"addContainer\"], [1, \"modalHeader\"], [1, \"editRowModal\"], [1, \"modalHeader\", \"clearfix\"], [1, \"modal-about\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Close dialog\", 1, \"modal-close-button\", 3, \"click\"], [\"mat-dialog-content\", \"\"], [1, \"register-form\", \"m-4\", 3, \"ngSubmit\", \"formGroup\"], [1, \"row\"], [1, \"col-xl-6\", \"col-lg-6\", \"col-md-12\", \"col-sm-12\", \"mb-2\"], [\"appearance\", \"outline\", 1, \"example-full-width\"], [\"matInput\", \"\", \"formControlName\", \"createdBy\", \"required\", \"\"], [\"matSuffix\", \"\", 1, \"material-icons-outlined\", \"color-icon\", \"p-3\"], [\"matInput\", \"\", \"formControlName\", \"subject\", \"required\", \"\"], [\"formControlName\", \"status\", \"required\", \"\"], [3, \"value\"], [\"matInput\", \"\", \"formControlName\", \"assignTo\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"date\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [1, \"col-xl-12\", \"col-lg-12\", \"col-md-12\", \"col-sm-12\", \"mb-2\"], [\"matInput\", \"\", \"formControlName\", \"details\"], [\"align\", \"end\", 1, \"example-button-row\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\", \"disabled\", \"mat-dialog-close\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"tabindex\", \"-1\", 3, \"click\"]],\n    template: function FormDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4)(4, \"div\", 5);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function FormDialogComponent_Template_button_click_6_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.dialogRef.close());\n        });\n        i0.ɵɵelementStart(7, \"mat-icon\");\n        i0.ɵɵtext(8, \"close\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"form\", 8);\n        i0.ɵɵlistener(\"ngSubmit\", function FormDialogComponent_Template_form_ngSubmit_10_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.submit);\n        });\n        i0.ɵɵelementStart(11, \"div\", 9)(12, \"div\", 10)(13, \"mat-form-field\", 11)(14, \"mat-label\");\n        i0.ɵɵtext(15, \"Created By\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 12);\n        i0.ɵɵelementStart(17, \"mat-icon\", 13);\n        i0.ɵɵtext(18, \"person_outline\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, FormDialogComponent_Conditional_19_Template, 2, 0, \"mat-error\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 10)(21, \"mat-form-field\", 11)(22, \"mat-label\");\n        i0.ɵɵtext(23, \"Subject\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 14);\n        i0.ɵɵelementStart(25, \"mat-icon\", 13);\n        i0.ɵɵtext(26, \"subject\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(27, FormDialogComponent_Conditional_27_Template, 2, 0, \"mat-error\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(28, \"div\", 9)(29, \"div\", 10)(30, \"mat-form-field\", 11)(31, \"mat-label\");\n        i0.ɵɵtext(32, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"mat-select\", 15)(34, \"mat-option\", 16);\n        i0.ɵɵtext(35, \" Open \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"mat-option\", 16);\n        i0.ɵɵtext(37, \" Closed \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(38, FormDialogComponent_Conditional_38_Template, 2, 0, \"mat-error\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(39, \"div\", 10)(40, \"mat-form-field\", 11)(41, \"mat-label\");\n        i0.ɵɵtext(42, \"Assign To\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(43, \"input\", 17);\n        i0.ɵɵelementStart(44, \"mat-icon\", 13);\n        i0.ɵɵtext(45, \"person_outline\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(46, FormDialogComponent_Conditional_46_Template, 2, 0, \"mat-error\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(47, \"div\", 9)(48, \"div\", 10)(49, \"mat-form-field\", 11)(50, \"mat-label\");\n        i0.ɵɵtext(51, \"Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(52, \"input\", 18)(53, \"mat-datepicker-toggle\", 19)(54, \"mat-datepicker\", null, 0);\n        i0.ɵɵtemplate(56, FormDialogComponent_Conditional_56_Template, 2, 0, \"mat-error\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(57, \"div\", 9)(58, \"div\", 20)(59, \"mat-form-field\", 11)(60, \"mat-label\");\n        i0.ɵɵtext(61, \"details\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(62, \"textarea\", 21);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(63, \"div\", 9)(64, \"div\", 20)(65, \"div\", 22)(66, \"button\", 23);\n        i0.ɵɵlistener(\"click\", function FormDialogComponent_Template_button_click_66_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.confirmAdd());\n        });\n        i0.ɵɵtext(67, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(68, \"button\", 24);\n        i0.ɵɵlistener(\"click\", function FormDialogComponent_Template_button_click_68_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onNoClick());\n        });\n        i0.ɵɵtext(69, \"Cancel\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        let tmp_3_0;\n        let tmp_4_0;\n        let tmp_7_0;\n        let tmp_8_0;\n        let tmp_11_0;\n        const picker_r2 = i0.ɵɵreference(55);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" \", ctx.dialogTitle, \" \");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.ticketForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵconditional(((tmp_3_0 = ctx.ticketForm.get(\"createdBy\")) == null ? null : tmp_3_0.hasError(\"required\")) ? 19 : -1);\n        i0.ɵɵadvance(8);\n        i0.ɵɵconditional(((tmp_4_0 = ctx.ticketForm.get(\"subject\")) == null ? null : tmp_4_0.hasError(\"required\")) ? 27 : -1);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"value\", \"Open\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", \"Closed\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(((tmp_7_0 = ctx.ticketForm.get(\"status\")) == null ? null : tmp_7_0.hasError(\"required\")) ? 38 : -1);\n        i0.ɵɵadvance(8);\n        i0.ɵɵconditional(((tmp_8_0 = ctx.ticketForm.get(\"assignTo\")) == null ? null : tmp_8_0.hasError(\"required\")) ? 46 : -1);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"matDatepicker\", picker_r2);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"for\", picker_r2);\n        i0.ɵɵadvance(3);\n        i0.ɵɵconditional(((tmp_11_0 = ctx.ticketForm.get(\"date\")) == null ? null : tmp_11_0.hasError(\"required\")) ? 56 : -1);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"disabled\", !ctx.ticketForm.valid)(\"mat-dialog-close\", 1);\n      }\n    },\n    dependencies: [MatButtonModule, i4.MatButton, i4.MatIconButton, MatIconModule, i5.MatIcon, MatDialogContent, FormsModule, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, ReactiveFormsModule, i3.FormGroupDirective, i3.FormControlName, MatFormFieldModule, i6.MatFormField, i6.MatLabel, i6.MatError, i6.MatSuffix, MatInputModule, i7.MatInput, MatSelectModule, i8.MatSelect, i9.MatOption, MatOptionModule, MatDatepickerModule, i10.MatDatepicker, i10.MatDatepickerInput, i10.MatDatepickerToggle, MatDialogClose]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}