{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CalendarService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.API_URL = 'assets/data/calendar.json';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    this.dataChange = new BehaviorSubject([]);\n  }\n  get data() {\n    return this.dataChange.value;\n  }\n  getDialogData() {\n    return this.dialogData;\n  }\n  getAllCalendars() {\n    return this.httpClient.get(this.API_URL).pipe(catchError(this.errorHandler));\n  }\n  addUpdateCalendar(calendar) {\n    this.dialogData = calendar;\n  }\n  deleteCalendar(calendar) {\n    this.dialogData = calendar;\n  }\n  errorHandler(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n  static #_ = this.ɵfac = function CalendarService_Factory(t) {\n    return new (t || CalendarService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CalendarService,\n    factory: CalendarService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}