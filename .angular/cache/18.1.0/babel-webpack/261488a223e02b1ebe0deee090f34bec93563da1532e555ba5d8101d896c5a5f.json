{"ast":null,"code":"import { RouterLink } from '@angular/router';\nimport { Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/button\";\nfunction ForgotPasswordComponent_Conditional_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ForgotPasswordComponent {\n  constructor(formBuilder, route, router) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.authForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email, Validators.minLength(5)]]\n    });\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n  get f() {\n    return this.authForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.authForm.invalid) {\n      return;\n    } else {\n      this.router.navigate(['/dashboard/main']);\n    }\n  }\n  static #_ = this.ɵfac = function ForgotPasswordComponent_Factory(t) {\n    return new (t || ForgotPasswordComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForgotPasswordComponent,\n    selectors: [[\"app-forgot-password\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 30,\n    vars: 3,\n    consts: [[1, \"auth-container\"], [1, \"row\", \"auth-main\"], [1, \"col-sm-6\", \"px-0\", \"d-none\", \"d-sm-block\"], [1, \"left-img\", 2, \"background-image\", \"url(assets/images/pages/bg-03.png)\"], [1, \"col-sm-6\", \"auth-form-section\"], [1, \"form-section\"], [1, \"auth-wrapper\"], [1, \"welcome-msg\"], [1, \"auth-signup-text\", \"text-muted\"], [1, \"validate-form\", 3, \"ngSubmit\", \"formGroup\"], [1, \"row\"], [1, \"col-xl-12\", \"col-lg-12\", \"col-md-12\", \"col-sm-12\", \"mb-2\"], [1, \"error-subheader2\", \"p-t-20\", \"p-b-15\"], [\"appearance\", \"outline\", 1, \"example-full-width\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"required\", \"\"], [\"matSuffix\", \"\", 1, \"material-icons-outlined\", \"color-icon\", \"p-3\"], [1, \"container-auth-form-btn\", \"mt-5\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"auth-form-btn\", 3, \"disabled\"], [1, \"w-full\", \"p-t-25\", \"text-center\"], [\"routerLink\", \"/authentication/signin\", 1, \"txt1\"]],\n    template: function ForgotPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"h2\", 7);\n        i0.ɵɵtext(8, \" Reset Password \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"p\", 8);\n        i0.ɵɵtext(10, \"Let Us Help You\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"form\", 9);\n        i0.ɵɵlistener(\"ngSubmit\", function ForgotPasswordComponent_Template_form_ngSubmit_11_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(12, \"div\", 10)(13, \"div\", 11)(14, \"span\", 12);\n        i0.ɵɵtext(15, \" Enter your registered email address. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"mat-form-field\", 13)(17, \"mat-label\");\n        i0.ɵɵtext(18, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 14);\n        i0.ɵɵelementStart(20, \"mat-icon\", 15);\n        i0.ɵɵtext(21, \"mail\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(22, ForgotPasswordComponent_Conditional_22_Template, 2, 0, \"mat-error\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(23, \"div\", 16)(24, \"button\", 17);\n        i0.ɵɵtext(25, \" Reset My Password \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"div\", 18)(27, \"div\")(28, \"a\", 19);\n        i0.ɵɵtext(29, \" Login? \");\n        i0.ɵɵelementEnd()()()()()()()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"formGroup\", ctx.authForm);\n        i0.ɵɵadvance(11);\n        i0.ɵɵconditional(((tmp_1_0 = ctx.authForm.get(\"email\")) == null ? null : tmp_1_0.hasError(\"required\")) || ((tmp_1_0 = ctx.authForm.get(\"email\")) == null ? null : tmp_1_0.touched) ? 22 : -1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.authForm.valid);\n      }\n    },\n    dependencies: [FormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, ReactiveFormsModule, i1.FormGroupDirective, i1.FormControlName, MatFormFieldModule, i3.MatFormField, i3.MatLabel, i3.MatError, i3.MatSuffix, MatInputModule, i4.MatInput, MatIconModule, i5.MatIcon, MatButtonModule, i6.MatButton, RouterLink]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}