{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { UnsubscribeOnDestroyAdapter } from '@shared';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LeaveBalanceService extends UnsubscribeOnDestroyAdapter {\n  constructor(httpClient) {\n    super();\n    this.httpClient = httpClient;\n    this.API_URL = 'assets/data/leave-balance.json';\n    this.isTblLoading = true;\n    this.dataChange = new BehaviorSubject([]);\n  }\n  get data() {\n    return this.dataChange.value;\n  }\n  getDialogData() {\n    return this.dialogData;\n  }\n  /** CRUD METHODS */\n  getAllLeavess() {\n    this.subs.sink = this.httpClient.get(this.API_URL).subscribe({\n      next: data => {\n        this.isTblLoading = false;\n        this.dataChange.next(data);\n      },\n      error: error => {\n        this.isTblLoading = false;\n        console.log(error.name + ' ' + error.message);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LeaveBalanceService_Factory(t) {\n    return new (t || LeaveBalanceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LeaveBalanceService,\n    factory: LeaveBalanceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}