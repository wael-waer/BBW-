{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { UntypedFormControl, Validators } from '@angular/forms';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../attendance.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/icon\";\nfunction FormComponent_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4)(4, \"div\", 5)(5, \"div\", 6)(6, \"div\", 7);\n    i0.ɵɵtext(7, \"Attendance Details\");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(8, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function FormComponent_Conditional_1_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.dialogRef.close());\n    });\n    i0.ɵɵelementStart(9, \"mat-icon\");\n    i0.ɵɵtext(10, \"close\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nexport class FormComponent {\n  constructor(dialogRef, data, attendancesService, fb) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.attendancesService = attendancesService;\n    this.fb = fb;\n    this.isDetails = false;\n    this.formControl = new UntypedFormControl('', [Validators.required\n    // Validators.email,\n    ]);\n    // Set the defaults\n    this.action = data.action;\n    // if (this.action === 'details') {\n    //   this.attendances = data.attendances;\n    //   this.isDetails = true;\n    // }\n  }\n  getErrorMessage() {\n    return this.formControl.hasError('required') ? 'Required field' : this.formControl.hasError('email') ? 'Not a valid email' : '';\n  }\n  // createContactForm(): UntypedFormGroup {\n  //   return this.fb.group({\n  //     id: [this.attendances.id],\n  //     date: [\n  //       formatDate(this.attendances.date, 'yyyy-MM-dd, HH:mm', 'en'),\n  //       [Validators.required],\n  //     ],\n  //     check_in: [this.attendances.check_in],\n  //     break: [this.attendances.break],\n  //     check_out: [this.attendances.check_out],\n  //     hours: [this.attendances.hours],\n  //     status: [this.attendances.status],\n  //     details: [this.attendances.details],\n  //   });\n  // }\n  submit() {\n    // emppty stuff\n  }\n  onNoClick() {\n    this.dialogRef.close();\n  }\n  confirmAdd() {\n    this.attendancesService.addAttendances(this.attendancesForm?.getRawValue());\n  }\n  static #_ = this.ɵfac = function FormComponent_Factory(t) {\n    return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.AttendancesService), i0.ɵɵdirectiveInject(i3.UntypedFormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormComponent,\n    selectors: [[\"app-form\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"addContainer\"], [1, \"contact-details\"], [1, \"modalHeader\"], [1, \"editRowModal\"], [1, \"modalHeader\", \"clearfix\"], [1, \"modal-about\", \"contact-header\"], [1, \"contact-details-heading\"], [1, \"contact-details-name\", \"mb-2\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Close dialog\", 1, \"modal-close-button\", 3, \"click\"]],\n    template: function FormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, FormComponent_Conditional_1_Template, 11, 0, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.isDetails ? 1 : -1);\n      }\n    },\n    dependencies: [MatButtonModule, i4.MatIconButton, MatIconModule, i5.MatIcon, MatCardModule, MatTooltipModule]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}