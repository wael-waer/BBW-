{"ast":null,"code":"import { SubSink } from './sub-sink';\nimport * as i0 from \"@angular/core\";\n/**\n * A class that automatically unsubscribes all observables when the object gets destroyed\n */\nexport class UnsubscribeOnDestroyAdapter {\n  constructor() {\n    /**\n     * The subscription sink object that stores all subscriptions\n     */\n    this.subs = new SubSink();\n  }\n  /**\n   * The lifecycle hook that unsubscribes all subscriptions when the component / object gets destroyed\n   */\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n  static #_ = this.ɵfac = function UnsubscribeOnDestroyAdapter_Factory(t) {\n    return new (t || UnsubscribeOnDestroyAdapter)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UnsubscribeOnDestroyAdapter,\n    factory: UnsubscribeOnDestroyAdapter.ɵfac\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}