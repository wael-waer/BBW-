{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { UnsubscribeOnDestroyAdapter } from '@shared';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class JobsListService extends UnsubscribeOnDestroyAdapter {\n  constructor(httpClient) {\n    super();\n    this.httpClient = httpClient;\n    this.API_URL = 'http://localhost:8086/job/addjob';\n    this.isTblLoading = true;\n    this.dataChange = new BehaviorSubject([]);\n  }\n  get data() {\n    return this.dataChange.value;\n  }\n  addJob(job) {\n    return this.httpClient.post(this.API_URL, job);\n  }\n  getJobs() {\n    return this.httpClient.get(this.API_URL);\n  }\n  deleteJob(jobId) {\n    const url = `${this.API_URL}/${jobId}`;\n    return this.httpClient.delete(url);\n  }\n  // getOpenJobs(): Observable<string[]> {\n  //   return this.httpClient.get<JobsList[]>(this.API_URL).pipe(\n  //     map((jobs: JobsList[]) => jobs.filter(job => job.status === 'Open').map(job => job.title))\n  //   );\n  // }\n  getJobTitleById(jobId) {\n    return this.httpClient.get(`${this.API_URL}/${jobId}/title`);\n  }\n  getDialogData() {\n    return this.dialogData;\n  }\n  /** CRUD METHODS */\n  getAllJobsLists() {\n    this.subs.sink = this.httpClient.get(this.API_URL).subscribe({\n      next: data => {\n        this.isTblLoading = false;\n        this.dataChange.next(data);\n      },\n      error: error => {\n        this.isTblLoading = false;\n        console.log(error.name + ' ' + error.message);\n      }\n    });\n  }\n  getSkills() {\n    return this.httpClient.get(`${this.APII_URL}`);\n  }\n  updateJob(job) {\n    const url = `${this.API_URL}/${job._id}`; // Utilisez l'ID du job pour construire l'URL de mise à jour\n    return this.httpClient.put(url, job);\n  }\n  addSkill(skill) {\n    return this.httpClient.post(this.APII_URL, skill);\n  }\n  addJobsList(jobsList) {\n    this.dialogData = jobsList;\n    // this.httpClient.post(this.API_URL, jobsList)\n    //   .subscribe({\n    //     next: (data) => {\n    //       this.dialogData = jobsList;\n    //     },\n    //     error: (error: HttpErrorResponse) => {\n    //        // error code here\n    //     },\n    //   });\n  }\n  updateJobsList(jobsList) {\n    this.dialogData = jobsList;\n    // this.httpClient.put(this.API_URL + jobsList.id, jobsList)\n    //     .subscribe({\n    //       next: (data) => {\n    //         this.dialogData = jobsList;\n    //       },\n    //       error: (error: HttpErrorResponse) => {\n    //          // error code here\n    //       },\n    //     });\n  }\n  deleteJobsList(id) {\n    console.log(id);\n    // this.httpClient.delete(this.API_URL + id)\n    //     .subscribe({\n    //       next: (data) => {\n    //         console.log(id);\n    //       },\n    //       error: (error: HttpErrorResponse) => {\n    //          // error code here\n    //       },\n    //     });\n  }\n  static #_ = this.ɵfac = function JobsListService_Factory(t) {\n    return new (t || JobsListService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: JobsListService,\n    factory: JobsListService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}