{"ast":null,"code":"import { DOCUMENT, NgClass } from '@angular/common';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { UnsubscribeOnDestroyAdapter } from '@shared';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { NgScrollbar } from 'ngx-scrollbar';\nimport { FeatherIconsComponent } from '@shared/components/feather-icons/feather-icons.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@core\";\nimport * as i2 from \"@config\";\nimport * as i3 from \"@angular/material/button-toggle\";\nimport * as i4 from \"@angular/material/slide-toggle\";\nconst _c0 = a0 => ({\n  \"active\": a0\n});\nexport class RightSidebarComponent extends UnsubscribeOnDestroyAdapter {\n  constructor(document, renderer, elementRef, rightSidebarService, configService, directionService) {\n    super();\n    this.document = document;\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.rightSidebarService = rightSidebarService;\n    this.configService = configService;\n    this.directionService = directionService;\n    this.selectedBgColor = 'white';\n    this.showpanel = false;\n    this.isDarkSidebar = false;\n    this.isDarTheme = false;\n    this.headerHeight = 60;\n    this.isRtl = false;\n  }\n  ngOnInit() {\n    this.config = this.configService.configData;\n    this.subs.sink = this.rightSidebarService.sidebarState.subscribe(isRunning => {\n      this.isOpenSidebar = isRunning;\n    });\n    this.setRightSidebarWindowHeight();\n  }\n  ngAfterViewInit() {\n    this.selectedBgColor = localStorage.getItem('choose_skin_active');\n    if (localStorage.getItem('menuOption')) {\n      if (localStorage.getItem('menuOption') === 'menu_dark') {\n        this.isDarkSidebar = true;\n      } else if (localStorage.getItem('menuOption') === 'menu_light') {\n        this.isDarkSidebar = false;\n      }\n    }\n    if (localStorage.getItem('theme')) {\n      if (localStorage.getItem('theme') === 'dark') {\n        this.isDarTheme = true;\n      } else if (localStorage.getItem('theme') === 'light') {\n        this.isDarTheme = false;\n      }\n    }\n    if (localStorage.getItem('isRtl')) {\n      if (localStorage.getItem('isRtl') === 'true') {\n        this.isRtl = true;\n      } else if (localStorage.getItem('isRtl') === 'false') {\n        this.isRtl = false;\n      }\n    }\n  }\n  selectTheme(e) {\n    this.selectedBgColor = e;\n    const prevTheme = this.elementRef.nativeElement.querySelector('.settingSidebar .choose-theme li.active').getAttribute('data-theme');\n    this.renderer.removeClass(this.document.body, 'theme-' + prevTheme);\n    this.renderer.addClass(this.document.body, 'theme-' + this.selectedBgColor);\n    localStorage.setItem('choose_skin', 'theme-' + this.selectedBgColor);\n    localStorage.setItem('choose_skin_active', this.selectedBgColor);\n  }\n  lightSidebarBtnClick() {\n    this.renderer.removeClass(this.document.body, 'menu_dark');\n    this.renderer.removeClass(this.document.body, 'logo-black');\n    this.renderer.addClass(this.document.body, 'menu_light');\n    this.renderer.addClass(this.document.body, 'logo-white');\n    const menuOption = 'menu_light';\n    localStorage.setItem('choose_logoheader', 'logo-white');\n    localStorage.setItem('menuOption', menuOption);\n  }\n  darkSidebarBtnClick() {\n    this.renderer.removeClass(this.document.body, 'menu_light');\n    this.renderer.removeClass(this.document.body, 'logo-white');\n    this.renderer.addClass(this.document.body, 'menu_dark');\n    this.renderer.addClass(this.document.body, 'logo-black');\n    const menuOption = 'menu_dark';\n    localStorage.setItem('choose_logoheader', 'logo-black');\n    localStorage.setItem('menuOption', menuOption);\n  }\n  lightThemeBtnClick() {\n    this.renderer.removeClass(this.document.body, 'dark');\n    this.renderer.removeClass(this.document.body, 'submenu-closed');\n    this.renderer.removeClass(this.document.body, 'menu_dark');\n    this.renderer.removeClass(this.document.body, 'logo-black');\n    if (localStorage.getItem('choose_skin')) {\n      this.renderer.removeClass(this.document.body, localStorage.getItem('choose_skin'));\n    } else {\n      this.renderer.removeClass(this.document.body, 'theme-' + this.config.layout.theme_color);\n    }\n    this.renderer.addClass(this.document.body, 'light');\n    this.renderer.addClass(this.document.body, 'submenu-closed');\n    this.renderer.addClass(this.document.body, 'menu_light');\n    this.renderer.addClass(this.document.body, 'logo-white');\n    this.renderer.addClass(this.document.body, 'theme-white');\n    const theme = 'light';\n    const menuOption = 'menu_light';\n    this.selectedBgColor = 'white';\n    this.isDarkSidebar = false;\n    localStorage.setItem('choose_logoheader', 'logo-white');\n    localStorage.setItem('choose_skin', 'theme-white');\n    localStorage.setItem('theme', theme);\n    localStorage.setItem('menuOption', menuOption);\n  }\n  darkThemeBtnClick() {\n    this.renderer.removeClass(this.document.body, 'light');\n    this.renderer.removeClass(this.document.body, 'submenu-closed');\n    this.renderer.removeClass(this.document.body, 'menu_light');\n    this.renderer.removeClass(this.document.body, 'logo-white');\n    if (localStorage.getItem('choose_skin')) {\n      this.renderer.removeClass(this.document.body, localStorage.getItem('choose_skin'));\n    } else {\n      this.renderer.removeClass(this.document.body, 'theme-' + this.config.layout.theme_color);\n    }\n    this.renderer.addClass(this.document.body, 'dark');\n    this.renderer.addClass(this.document.body, 'submenu-closed');\n    this.renderer.addClass(this.document.body, 'menu_dark');\n    this.renderer.addClass(this.document.body, 'logo-black');\n    this.renderer.addClass(this.document.body, 'theme-black');\n    const theme = 'dark';\n    const menuOption = 'menu_dark';\n    this.selectedBgColor = 'black';\n    this.isDarkSidebar = true;\n    localStorage.setItem('choose_logoheader', 'logo-black');\n    localStorage.setItem('choose_skin', 'theme-black');\n    localStorage.setItem('theme', theme);\n    localStorage.setItem('menuOption', menuOption);\n  }\n  setRightSidebarWindowHeight() {\n    this.innerHeight = window.innerHeight;\n    const height = this.innerHeight - this.headerHeight;\n    this.maxHeight = height + '';\n    this.maxWidth = '500px';\n  }\n  onClickedOutside(event) {\n    const button = event.target;\n    if (button.id !== 'settingBtn') {\n      if (this.isOpenSidebar === true) {\n        this.toggleRightSidebar();\n      }\n    }\n  }\n  toggleRightSidebar() {\n    this.rightSidebarService.setRightSidebar(this.isOpenSidebar = !this.isOpenSidebar);\n  }\n  switchDirection(event) {\n    const isrtl = String(event.checked);\n    if (isrtl === 'false' && document.getElementsByTagName('html')[0].hasAttribute('dir')) {\n      document.getElementsByTagName('html')[0].removeAttribute('dir');\n      this.renderer.removeClass(this.document.body, 'rtl');\n      this.directionService.updateDirection('ltr');\n    } else if (isrtl === 'true' && !document.getElementsByTagName('html')[0].hasAttribute('dir')) {\n      document.getElementsByTagName('html')[0].setAttribute('dir', 'rtl');\n      this.renderer.addClass(this.document.body, 'rtl');\n      this.directionService.updateDirection('rtl');\n    }\n    localStorage.setItem('isRtl', isrtl);\n    this.isRtl = event.checked;\n  }\n  setRTLSettings() {\n    document.getElementsByTagName('html')[0].setAttribute('dir', 'rtl');\n    this.renderer.addClass(this.document.body, 'rtl');\n    this.isRtl = true;\n    localStorage.setItem('isRtl', 'true');\n  }\n  setLTRSettings() {\n    document.getElementsByTagName('html')[0].removeAttribute('dir');\n    this.renderer.removeClass(this.document.body, 'rtl');\n    this.isRtl = false;\n    localStorage.setItem('isRtl', 'false');\n  }\n  static #_ = this.ɵfac = function RightSidebarComponent_Factory(t) {\n    return new (t || RightSidebarComponent)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.RightSidebarService), i0.ɵɵdirectiveInject(i2.ConfigService), i0.ɵɵdirectiveInject(i1.DirectionService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RightSidebarComponent,\n    selectors: [[\"app-right-sidebar\"]],\n    standalone: true,\n    features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n    decls: 55,\n    vars: 31,\n    consts: [[1, \"settingSidebar\", 3, \"ngClass\"], [\"href\", \"javascript:void(0)\", 1, \"settingPanelToggle\", 3, \"click\"], [3, \"icon\"], [\"visibility\", \"hover\"], [1, \"settingSidebar-body\", \"ps-container\", \"ps-theme-default\"], [1, \"fade\", \"show\", \"active\"], [1, \"setting-panel-header\"], [1, \"p-15\", \"border-bottom\"], [1, \"font-medium\", \"m-b-10\"], [1, \"flex\", \"flex-wrap\", \"hiddenradio\"], [1, \"flex\", \"flex-col\"], [\"type\", \"radio\", \"name\", \"value\", \"value\", \"light\", 3, \"click\", \"checked\"], [\"src\", \"assets/images/light.png\"], [1, \"mt-1\", \"text-md\", \"text-center\"], [1, \"flex\", \"flex-col\", \"mt-3\"], [\"type\", \"radio\", \"name\", \"value\", \"value\", \"dark\", 3, \"click\", \"checked\"], [\"src\", \"assets/images/dark.png\"], [1, \"rightSetting\"], [1, \"mt-2\", 3, \"value\"], [\"value\", \"light\", 3, \"click\"], [\"value\", \"dark\", 3, \"click\"], [1, \"theme-setting-options\"], [1, \"choose-theme\", \"list-unstyled\", \"mb-0\"], [\"data-theme\", \"white\", 3, \"click\", \"ngClass\"], [1, \"white\"], [\"data-theme\", \"black\", 3, \"click\", \"ngClass\"], [1, \"black\"], [\"data-theme\", \"purple\", 3, \"click\", \"ngClass\"], [1, \"purple\"], [\"data-theme\", \"orange\", 3, \"click\", \"ngClass\"], [1, \"orange\"], [\"data-theme\", \"cyan\", 3, \"click\", \"ngClass\"], [1, \"cyan\"], [\"data-theme\", \"green\", 3, \"click\", \"ngClass\"], [1, \"green\"], [\"data-theme\", \"blue\", 3, \"click\", \"ngClass\"], [1, \"blue\"], [1, \"mt-2\", 3, \"change\", \"checked\"]],\n    template: function RightSidebarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"a\", 1);\n        i0.ɵɵlistener(\"click\", function RightSidebarComponent_Template_a_click_1_listener() {\n          return ctx.toggleRightSidebar();\n        });\n        i0.ɵɵelement(2, \"app-feather-icons\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"ng-scrollbar\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6);\n        i0.ɵɵtext(7, \"Setting Panel \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"h6\", 8);\n        i0.ɵɵtext(10, \"Select Layout\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 9)(12, \"div\", 10)(13, \"label\")(14, \"input\", 11);\n        i0.ɵɵlistener(\"click\", function RightSidebarComponent_Template_input_click_14_listener() {\n          return ctx.lightThemeBtnClick();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"img\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 13);\n        i0.ɵɵtext(17, \" Light \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 14)(19, \"label\")(20, \"input\", 15);\n        i0.ɵɵlistener(\"click\", function RightSidebarComponent_Template_input_click_20_listener() {\n          return ctx.darkThemeBtnClick();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"img\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 13);\n        i0.ɵɵtext(23, \" Dark \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(24, \"div\", 17)(25, \"h6\", 8);\n        i0.ɵɵtext(26, \"Sidebar Menu Color\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"mat-button-toggle-group\", 18)(28, \"mat-button-toggle\", 19);\n        i0.ɵɵlistener(\"click\", function RightSidebarComponent_Template_mat_button_toggle_click_28_listener() {\n          return ctx.lightSidebarBtnClick();\n        });\n        i0.ɵɵtext(29, \"Light\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"mat-button-toggle\", 20);\n        i0.ɵɵlistener(\"click\", function RightSidebarComponent_Template_mat_button_toggle_click_30_listener() {\n          return ctx.darkSidebarBtnClick();\n        });\n        i0.ɵɵtext(31, \"Dark\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(32, \"div\", 7)(33, \"h6\", 8);\n        i0.ɵɵtext(34, \"Color Theme\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 21)(36, \"ul\", 22)(37, \"li\", 23);\n        i0.ɵɵlistener(\"click\", function RightSidebarComponent_Template_li_click_37_listener() {\n          return ctx.selectTheme(\"white\");\n        });\n        i0.ɵɵelement(38, \"div\", 24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"li\", 25);\n        i0.ɵɵlistener(\"click\", function RightSidebarComponent_Template_li_click_39_listener() {\n          return ctx.selectTheme(\"black\");\n        });\n        i0.ɵɵelement(40, \"div\", 26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"li\", 27);\n        i0.ɵɵlistener(\"click\", function RightSidebarComponent_Template_li_click_41_listener() {\n          return ctx.selectTheme(\"purple\");\n        });\n        i0.ɵɵelement(42, \"div\", 28);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"li\", 29);\n        i0.ɵɵlistener(\"click\", function RightSidebarComponent_Template_li_click_43_listener() {\n          return ctx.selectTheme(\"orange\");\n        });\n        i0.ɵɵelement(44, \"div\", 30);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"li\", 31);\n        i0.ɵɵlistener(\"click\", function RightSidebarComponent_Template_li_click_45_listener() {\n          return ctx.selectTheme(\"cyan\");\n        });\n        i0.ɵɵelement(46, \"div\", 32);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"li\", 33);\n        i0.ɵɵlistener(\"click\", function RightSidebarComponent_Template_li_click_47_listener() {\n          return ctx.selectTheme(\"green\");\n        });\n        i0.ɵɵelement(48, \"div\", 34);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"li\", 35);\n        i0.ɵɵlistener(\"click\", function RightSidebarComponent_Template_li_click_49_listener() {\n          return ctx.selectTheme(\"blue\");\n        });\n        i0.ɵɵelement(50, \"div\", 36);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(51, \"div\", 17)(52, \"h6\", 8);\n        i0.ɵɵtext(53, \"RTL Layout\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(54, \"mat-slide-toggle\", 37);\n        i0.ɵɵlistener(\"change\", function RightSidebarComponent_Template_mat_slide_toggle_change_54_listener($event) {\n          return ctx.switchDirection($event);\n        });\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.isOpenSidebar ? \"showSettingPanel\" : \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassMap(\"setting-sidebar-icon\");\n        i0.ɵɵproperty(\"icon\", \"settings\");\n        i0.ɵɵadvance();\n        i0.ɵɵstyleProp(\"height\", ctx.maxHeight + \"px\");\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"checked\", ctx.isDarTheme === false ? true : false);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"checked\", ctx.isDarTheme === true ? true : false);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"value\", ctx.isDarkSidebar ? \"dark\" : \"light\");\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c0, ctx.selectedBgColor === \"white\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(19, _c0, ctx.selectedBgColor === \"black\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(21, _c0, ctx.selectedBgColor === \"purple\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(23, _c0, ctx.selectedBgColor === \"orange\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(25, _c0, ctx.selectedBgColor === \"cyan\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(27, _c0, ctx.selectedBgColor === \"green\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(29, _c0, ctx.selectedBgColor === \"blue\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"checked\", ctx.isRtl);\n      }\n    },\n    dependencies: [NgClass, FeatherIconsComponent, NgScrollbar, MatButtonToggleModule, i3.MatButtonToggleGroup, i3.MatButtonToggle, MatSlideToggleModule, i4.MatSlideToggle],\n    changeDetection: 0\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}