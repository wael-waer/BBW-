{"ast":null,"code":"import { RouterLink } from '@angular/router';\nimport { Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Role } from '@core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@core\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/material/button\";\nfunction LockedComponent_Conditional_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LockedComponent {\n  constructor(formBuilder, router, authService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.authService = authService;\n    this.submitted = false;\n    this.hide = true;\n  }\n  ngOnInit() {\n    this.authForm = this.formBuilder.group({\n      password: ['', Validators.required]\n    });\n    this.userImg = this.authService.currentUserValue.img;\n    this.userFullName = this.authService.currentUserValue.firstName + ' ' + this.authService.currentUserValue.lastName;\n  }\n  get f() {\n    return this.authForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.authForm.invalid) {\n      return;\n    } else {\n      const role = this.authService.currentUserValue.role;\n      if (role === Role.All || role === Role.Admin) {\n        this.router.navigate(['/admin/dashboard/main']);\n      } else if (role === Role.Employee) {\n        this.router.navigate(['/employee/dashboard']);\n      } else if (role === Role.Client) {\n        this.router.navigate(['/client/dashboard']);\n      } else {\n        this.router.navigate(['/authentication/signin']);\n      }\n    }\n  }\n  static #_ = this.ɵfac = function LockedComponent_Factory(t) {\n    return new (t || LockedComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LockedComponent,\n    selectors: [[\"app-locked\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 34,\n    vars: 7,\n    consts: [[1, \"auth-container\"], [1, \"row\", \"auth-main\"], [1, \"col-sm-6\", \"px-0\", \"d-none\", \"d-sm-block\"], [1, \"left-img\", 2, \"background-image\", \"url(assets/images/pages/bg-01.png)\"], [1, \"col-sm-6\", \"auth-form-section\"], [1, \"form-section\"], [1, \"auth-wrapper\"], [1, \"validate-form\", 3, \"ngSubmit\", \"formGroup\"], [1, \"auth-locked\"], [1, \"image\"], [\"alt\", \"User\", 3, \"src\"], [1, \"auth-locked-title\", \"p-b-34\", \"p-t-27\"], [1, \"text-center\"], [1, \"txt1\", \"p-b-20\"], [1, \"row\"], [1, \"col-xl-12\", \"col-lg-12\", \"col-md-12\", \"col-sm-12\", \"mb-2\"], [1, \"error-subheader2\", \"p-t-20\", \"p-b-15\"], [\"appearance\", \"outline\", 1, \"example-full-width\"], [\"matInput\", \"\", \"formControlName\", \"password\", \"required\", \"\", 3, \"type\"], [\"matSuffix\", \"\", 3, \"click\"], [1, \"container-auth-form-btn\", \"mt-5\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"auth-form-btn\", 3, \"disabled\"], [1, \"w-full\", \"p-t-15\", \"p-b-15\", \"text-center\"], [\"routerLink\", \"/authentication/signin\", 1, \"txt1\"]],\n    template: function LockedComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"form\", 7);\n        i0.ɵɵlistener(\"ngSubmit\", function LockedComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(8, \"div\", 8)(9, \"div\", 9);\n        i0.ɵɵelement(10, \"img\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"span\", 11);\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 12)(14, \"p\", 13);\n        i0.ɵɵtext(15, \" Locked \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 14)(17, \"div\", 15)(18, \"span\", 16);\n        i0.ɵɵtext(19, \" Enter your password here. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"mat-form-field\", 17)(21, \"mat-label\");\n        i0.ɵɵtext(22, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 18);\n        i0.ɵɵelementStart(24, \"mat-icon\", 19);\n        i0.ɵɵlistener(\"click\", function LockedComponent_Template_mat_icon_click_24_listener() {\n          return ctx.hide = !ctx.hide;\n        });\n        i0.ɵɵtext(25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(26, LockedComponent_Conditional_26_Template, 2, 0, \"mat-error\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(27, \"div\", 20)(28, \"button\", 21);\n        i0.ɵɵtext(29, \" Reset My Password \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"div\", 22)(31, \"div\")(32, \"a\", 23);\n        i0.ɵɵtext(33, \" Need Help? \");\n        i0.ɵɵelementEnd()()()()()()()()();\n      }\n      if (rf & 2) {\n        let tmp_5_0;\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.authForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"src\", ctx.userImg, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.userFullName, \" \");\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.hide ? \"visibility_off\" : \"visibility\", \"\");\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(((tmp_5_0 = ctx.authForm.get(\"password\")) == null ? null : tmp_5_0.hasError(\"required\")) ? 26 : -1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.authForm.valid);\n      }\n    },\n    dependencies: [FormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, ReactiveFormsModule, i1.FormGroupDirective, i1.FormControlName, MatFormFieldModule, i4.MatFormField, i4.MatLabel, i4.MatError, i4.MatSuffix, MatInputModule, i5.MatInput, MatIconModule, i6.MatIcon, MatButtonModule, i7.MatButton, RouterLink]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}